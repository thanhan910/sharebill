@page "/calculator"
@rendermode InteractiveServer

@using ShareBill.Models

<PageTitle>Calculator</PageTitle>

<h1>Bill Sharing Calculator</h1>

<Clock />


<h3>Participants List</h3>

<table class="table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Is Payer</th>
      <th>Is Owner</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    @foreach (var participant in participantsMap)
    {
      <tr>
        <td>@participant.Value.Name</td>
        <td>@(participant.Value.IsPayer ? "Yes" : "")</td>
        <td>@(participant.Value.IsOwner ? "Yes" : "")</td>
        <td><button class="btn btn-danger" @onclick="() => participantsMap.Remove(participant.Key)">Delete</button></td>
      </tr>
    }
  </tbody>
</table>

<h3>Add Participants</h3>

<form @onsubmit="AddParticipant" class="row g-2 align-items-center">
  <div class="col-sm-12 col-md-4">
    <input type="text" class="form-control" placeholder="Name" @bind="participantName" />
  </div>
  <div class="col-auto col-sm-2 col-md-1">
    <div class="form-check">
      <input type="checkbox" class="form-check-input" id="isPayer" @bind="participantIsPayer" />
      <label class="form-check-label" for="isPayer">Payer</label>
    </div>
  </div>
  <div class="col-auto col-sm-2 col-md-1">
    <div class="form-check">
      <input type="checkbox" class="form-check-input" id="isOwner" @bind="participantIsOwner" />
      <label class="form-check-label" for="isOwner">Owner</label>
    </div>
  </div>
  <div class="col-auto col-sm-2 col-md-1">
    <button type="submit" class="btn btn-primary">Add</button>
  </div>
</form>


@code {
  private string personId = DateTime.Now.ToString("yyyyMMddHHmmssfff");
  private string participantName = string.Empty;
  private bool participantIsPayer = true;
  private bool participantIsOwner = true;
  private Dictionary<string, Person> participantsMap;

  public Calculator()
  {
    participantsMap = new Dictionary<string, Person> { { personId, new Person { Name = "You", IsPayer = true, IsOwner = true } } };
  }
  private void AddParticipant()
  {
    string participantId = DateTime.Now.ToString("yyyyMMddHHmmssfff");
    if (string.IsNullOrWhiteSpace(participantName))
    {
      participantName = $"Participant {participantId}";
    }
    participantsMap.Add(participantId, new Person
      {
        Name = participantName,
        IsPayer = participantIsPayer,
        IsOwner = participantIsOwner
      });
    participantName = string.Empty;
  }
}

<br />


<h3>Products List</h3>

<table class="table">
  <thead>
    <tr>
      <th>Name</th>
      <th>Unit Price</th>
      <th>Unit</th>
      <th>Amount bought</th>
      <th>Item count</th>
      <th>Total Price</th>
      <th>Paid by</th>
      <th>Split Scheme</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
    @foreach (var product in products)
    {
      <tr>
        <td>@product.Name</td>
        <td>$@product.PricePerUnit.ToString("0.00")</td>
        <td>@product.UnitName</td>
        <td>@product.Quantity</td>
        <td>@product.ItemCount</td>
        <td>$@product.TotalPrice.ToString("0.00")</td>
        <td>@(product.PaidBy != null ? product.PaidBy.Name : "")</td>
        <td>@(Product.SplitSchemeMap[product.SplitScheme])</td>
        <td><button class="btn btn-danger" @onclick="() => products.Remove(product)">Delete</button></td>
      </tr>
    }
  </tbody>
</table>

<style>
    .form-responsive-width {
        width: 100%;
    }

    @@media (min-width: 992px) {
        .form-responsive-width {
            width: 60%;
        }
    }
</style>


<h3>Add Products</h3>

<form @onsubmit="AddProduct" class="row g-3 align-items-end mb-5 form-responsive-width">
  <div class="col-md-12">
    <label for="productName" class="form-label">Name</label>
    <input id="productName" type="text" class="form-control" placeholder="Name" @bind="product.Name">
  </div>
  <div class="col-md-4">
    <label for="productPricePerUnit" class="form-label">Unit Price</label>
    <span class="input-group">
      <span class="input-group-text">$</span>
      <input id="productPricePerUnit" type="number" step="0.01" class="form-control" placeholder="00.00" @bind="product.PricePerUnit">
    </span>
  </div>
  <div class="col-md-4">
    <label class="form-label">Using unit:</label>
    <span class="input-group">
      <div class="input-group-text">
        <input class="form-check-input mt-0" type="checkbox" aria-label="Checkbox for following text input" @bind="product.UseUnit">
      </div>
      <input type="text" class="form-control" aria-label="Text input with checkbox" placeholder="@(product.UseUnit ? "Unit name" : "item")" @bind="product.UnitName"  disabled="@(!product.UseUnit)">
    </span>
  </div>
  <div class="col-md-4">
    <label for="productQuantity" class="form-label">Amount bought</label>
    <span class="input-group">
      <input id="productQuantity" type="number" step="@(product.IsUsingUnit ? "0.01" : "1")" class="form-control" placeholder="@(product.IsUsingUnit ? "00.00" : "0")" @bind="product.Quantity">
      <span class="input-group-text">@(product.IsUsingUnit ? product.UnitName : "item")(s)</span>
    </span>
  </div>
  <div class="col-md-4">
    <label for="productTotalPrice" class="form-label">Total Price</label>
    <span class="input-group">
      <span class="input-group-text">$</span>
      <input id="productTotalPrice" type="number" step="0.01" class="form-control" placeholder="00.00" @bind="product.TotalPrice">
    </span>
  </div>
  <div class="col-md-2">
    <label for="productItemCount" class="form-label">Item count</label>
    <input id="productItemCount" type="number" class="form-control" placeholder="1" min="1" @bind="product.ItemCount" disabled="@(!product.IsUsingUnit)">
  </div>
  <div class="col-md-auto">
    <label for="productSplitScheme" class="form-label">Split scheme</label>
    <select class="form-select" id="productSplitScheme" @bind="product.SplitScheme">
      @foreach (var splitScheme in Product.SplitSchemeMap)
      {
        <option value="@splitScheme.Key">@splitScheme.Value</option>
      }
    </select>
  </div>
  <div class="col-md-auto">
    <label for="productPayer" class="form-label">Paid by:</label>
    <select class="form-select" id="productPayer" @bind="personId">
      @foreach (var participant in participantsMap)
      {
        <option value="@participant.Key">@participant.Value.Name</option>
      }
    </select>
  </div>
  <div class="col-md-3">
    <button type="submit" class="btn btn-primary">Add</button>
  </div>
</form>


@code {
  private Product product = new Product();
  private List<Product> products = new List<Product>();
  private void AddProduct()
  {
    if (string.IsNullOrWhiteSpace(product.Name))
    {
      product.Name = "New product";
    }
    product.PaidBy = participantsMap[personId];
    products.Add(product);
    product = new Product();
  }
}